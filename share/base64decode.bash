#!/bin/bash

# Step1: Convert BASE64-STRING to HEX-STRING
# Step2: Convert HEX-STRING to UTF8-STRING

convert_base64_hex()
{
 if [ $(( ${#1} & 3)) -ne 0 ]
 then
  echo "Base64 lenght error"
  exit 1
 fi

 local LOCAL_CODEPAGE_BASE64='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
 local LOCAL_CODEPAGE_HEX='0123456789ABCDEF'

 local LOCAL_STRING_BASE64
 local LOCAL_LENGTH_BASE64
 local LOCAL_STRING_HEX

 local LOCAL_INDEX_BASE64
 local LOCAL_NUMBER_BASE64_PREVIOUS
 local LOCAL_NUMBER_BASE64_NOW
 local LOCAL_NUMBER_HEXBYTE


 LOCAL_STRING_BASE64="$1"
 LOCAL_LENGTH_BASE64=${#LOCAL_STRING_BASE64}

 LOCAL_STRING_HEX=""
 LOCAL_INDEX_BASE64=1
 LOCAL_NUMBER_BASE64_PREVIOUS=$(( $(expr index $LOCAL_CODEPAGE_BASE64 \"${LOCAL_STRING_BASE64:0:1}\" - 1) ))

 while [ $LOCAL_INDEX_BASE64 -lt $LOCAL_LENGTH_BASE64 ]
 do
  LOCAL_CHARACTER_BASE64_NOW=${LOCAL_STRING_BASE64:$LOCAL_INDEX_BASE64:1}

  if [ "$LOCAL_CHARACTER_BASE64_NOW" == "=" ]
  then
   break
  fi

  LOCAL_NUMBER_BASE64_NOW=$(( $(expr index $LOCAL_CODEPAGE_BASE64 \"$LOCAL_CHARACTER_BASE64_NOW\") - 1 ))

  case $(( $LOCAL_INDEX_BASE64 & 3 )) in
  1)
   LOCAL_NUMBER_HEXBYTE=$(( $LOCAL_NUMBER_BASE64_PREVIOUS << 2 | $LOCAL_NUMBER_BASE64_NOW >> 4 ))
   LOCAL_STRING_HEX+=${LOCAL_CODEPAGE_HEX:$(( $LOCAL_NUMBER_HEXBYTE >> 4 )):1}
   LOCAL_STRING_HEX+=${LOCAL_CODEPAGE_HEX:$(( $LOCAL_NUMBER_HEXBYTE & 15 )):1}
   ;;
  2)
   LOCAL_NUMBER_HEXBYTE=$(( $(( $LOCAL_NUMBER_BASE64_PREVIOUS & 15 )) << 4 | $LOCAL_NUMBER_BASE64_NOW >> 2 ))
   LOCAL_STRING_HEX+=${LOCAL_CODEPAGE_HEX:$(( $LOCAL_NUMBER_HEXBYTE >> 4 )):1}
   LOCAL_STRING_HEX+=${LOCAL_CODEPAGE_HEX:$(( $LOCAL_NUMBER_HEXBYTE & 15 )):1}
   ;;
  3)
   LOCAL_NUMBER_HEXBYTE=$(( $(( $LOCAL_NUMBER_BASE64_PREVIOUS & 3 )) << 6 | $LOCAL_NUMBER_BASE64_NOW ))
   LOCAL_STRING_HEX+=${LOCAL_CODEPAGE_HEX:$(( $LOCAL_NUMBER_HEXBYTE >> 4 )):1}
   LOCAL_STRING_HEX+=${LOCAL_CODEPAGE_HEX:$(( $LOCAL_NUMBER_HEXBYTE & 15 )):1}
  ;;
  esac

  LOCAL_NUMBER_BASE64_PREVIOUS=$LOCAL_NUMBER_BASE64_NOW
  ((LOCAL_INDEX_BASE64++))
 done

 echo "$LOCAL_STRING_HEX"
}

convert_hex_utf8()
{
 if [ $(( ${#1} & 1)) -ne 0 ]
 then
  echo "Hex lenght error"
  exit 1
 fi

 local LOCAL_CODEPAGE_HEX='0123456789ABCDEF'

 local LOCAL_STRING_HEX

 LOCAL_STRING_HEX="$1"
 LOCAL_LENGTH_HEX=${#LOCAL_STRING_HEX}
 LOCAL_STRING_UTF8=""

 for(( LOCAL_INDEX_HEX=0; LOCAL_INDEX_HEX<LOCAL_LENGTH_HEX; LOCAL_INDEX_HEX+=2 ))
 do
  LOCAL_CHARACTER_HEX_1=${LOCAL_STRING_HEX:$LOCAL_INDEX_HEX:1}
  LOCAL_CHARACTER_HEX_2=${LOCAL_STRING_HEX:$LOCAL_INDEX_HEX + 1:1}
  LOCAL_NUMBER_HEX_1=$(( $(expr index $LOCAL_CODEPAGE_HEX \"$LOCAL_CHARACTER_HEX_1\") - 1))

 case $(( $LOCAL_NUMBER_HEX_1 >> 2 )) in
  0|1)
   LOCAL_STRING_UTF8+=$(echo -e "\U${LOCAL_CHARACTER_HEX_1}${LOCAL_CHARACTER_HEX_2}")
   ;;
  2)
   if [ $LOCAL_NUMBER_UTF8_10 -eq 1 ]
   then
    echo "utf-8 format error"
    exit 3
   fi
   ;;
  3)
   case $LOCAL_NUMBER_HEX_1 in
    14)
     LOCAL_CHARACTER_HEX_3=${LOCAL_STRING_HEX:$LOCAL_INDEX_HEX + 2:1}
     LOCAL_CHARACTER_HEX_4=${LOCAL_STRING_HEX:$LOCAL_INDEX_HEX + 3:1}
     LOCAL_CHARACTER_HEX_5=${LOCAL_STRING_HEX:$LOCAL_INDEX_HEX + 4:1}
     LOCAL_CHARACTER_HEX_6=${LOCAL_STRING_HEX:$LOCAL_INDEX_HEX + 5:1}

     LOCAL_NUMBER_HEX_2=$(( $(expr index $LOCAL_CODEPAGE_HEX \"$LOCAL_CHARACTER_HEX_2\") - 1 ))
     LOCAL_NUMBER_HEX_3=$(( $(expr index $LOCAL_CODEPAGE_HEX \"$LOCAL_CHARACTER_HEX_3\") - 1 ))
     LOCAL_NUMBER_HEX_4=$(( $(expr index $LOCAL_CODEPAGE_HEX \"$LOCAL_CHARACTER_HEX_4\") - 1 ))
     LOCAL_NUMBER_HEX_5=$(( $(expr index $LOCAL_CODEPAGE_HEX \"$LOCAL_CHARACTER_HEX_5\") - 1 ))
     LOCAL_NUMBER_HEX_6=$(( $(expr index $LOCAL_CODEPAGE_HEX \"$LOCAL_CHARACTER_HEX_6\") - 1 ))

     LOCAL_NUMBER_HEXBYTE_3=$(( $LOCAL_NUMBER_HEX_2 << 4 | $(( $LOCAL_NUMBER_HEX_3 & 3 )) << 2 | $(( $LOCAL_NUMBER_HEX_4 & 12 )) >> 2 ))
     LOCAL_NUMBER_HEXBYTE_4=$(( $(( $LOCAL_NUMBER_HEX_4 & 3 )) << 6 | $(( $LOCAL_NUMBER_HEX_5 & 3 )) << 4 | $LOCAL_NUMBER_HEX_6 ))

     LOCAL_STRING_UTF8_HEX+=${LOCAL_CODEPAGE_HEX:$(( $LOCAL_NUMBER_HEXBYTE_3 >> 4 )):1}
     LOCAL_STRING_UTF8_HEX+=${LOCAL_CODEPAGE_HEX:$(( $LOCAL_NUMBER_HEXBYTE_3 & 15 )):1}
     LOCAL_STRING_UTF8_HEX+=${LOCAL_CODEPAGE_HEX:$(( $LOCAL_NUMBER_HEXBYTE_4 >> 4 )):1}
     LOCAL_STRING_UTF8_HEX+=${LOCAL_CODEPAGE_HEX:$(( $LOCAL_NUMBER_HEXBYTE_4 & 15 )):1}

     (( LOCAL_INDEX_HEX+=4 ))
     ;;
    15)
     LOCAL_CHARACTER_HEX_3=${LOCAL_STRING_HEX:$LOCAL_INDEX_HEX + 2:1}
     LOCAL_CHARACTER_HEX_4=${LOCAL_STRING_HEX:$LOCAL_INDEX_HEX + 3:1}
     LOCAL_CHARACTER_HEX_5=${LOCAL_STRING_HEX:$LOCAL_INDEX_HEX + 4:1}
     LOCAL_CHARACTER_HEX_6=${LOCAL_STRING_HEX:$LOCAL_INDEX_HEX + 5:1}
     LOCAL_CHARACTER_HEX_7=${LOCAL_STRING_HEX:$LOCAL_INDEX_HEX + 6:1}
     LOCAL_CHARACTER_HEX_8=${LOCAL_STRING_HEX:$LOCAL_INDEX_HEX + 7:1}

     LOCAL_NUMBER_HEX_2=$(( $(expr index $LOCAL_CODEPAGE_HEX \"$LOCAL_CHARACTER_HEX_2\") - 1 ))
     LOCAL_NUMBER_HEX_3=$(( $(expr index $LOCAL_CODEPAGE_HEX \"$LOCAL_CHARACTER_HEX_3\") - 1 ))
     LOCAL_NUMBER_HEX_4=$(( $(expr index $LOCAL_CODEPAGE_HEX \"$LOCAL_CHARACTER_HEX_4\") - 1 ))
     LOCAL_NUMBER_HEX_5=$(( $(expr index $LOCAL_CODEPAGE_HEX \"$LOCAL_CHARACTER_HEX_5\") - 1 ))
     LOCAL_NUMBER_HEX_6=$(( $(expr index $LOCAL_CODEPAGE_HEX \"$LOCAL_CHARACTER_HEX_6\") - 1 ))
     LOCAL_NUMBER_HEX_7=$(( $(expr index $LOCAL_CODEPAGE_HEX \"$LOCAL_CHARACTER_HEX_7\") - 1 ))
     LOCAL_NUMBER_HEX_8=$(( $(expr index $LOCAL_CODEPAGE_HEX \"$LOCAL_CHARACTER_HEX_8\") - 1 ))

     LOCAL_NUMBER_HEXBYTE_2=$(( $(( $LOCAL_NUMBER_HEX_2 & 7 )) << 2 | $(( $LOCAL_NUMBER_HEX_3 & 3 )) ))
     LOCAL_NUMBER_HEXBYTE_3=$(( $LOCAL_NUMBER_HEX_4 << 4 | $(( $LOCAL_NUMBER_HEX_5 & 3 )) << 2 | $(( $LOCAL_NUMBER_HEX_6 & 12 )) >> 2 ))
     LOCAL_NUMBER_HEXBYTE_4=$(( $(( $LOCAL_NUMBER_HEX_6 & 3 )) << 6 | $(( $LOCAL_NUMBER_HEX_7 & 3 )) << 4 | $LOCAL_NUMBER_HEX_8 ))

     LOCAL_STRING_UTF8_HEX+=${LOCAL_CODEPAGE_HEX:$(( $LOCAL_NUMBER_HEXBYTE_2 >> 4 )):1}
     LOCAL_STRING_UTF8_HEX+=${LOCAL_CODEPAGE_HEX:$(( $LOCAL_NUMBER_HEXBYTE_2 & 15 )):1}
     LOCAL_STRING_UTF8_HEX+=${LOCAL_CODEPAGE_HEX:$(( $LOCAL_NUMBER_HEXBYTE_3 >> 4 )):1}
     LOCAL_STRING_UTF8_HEX+=${LOCAL_CODEPAGE_HEX:$(( $LOCAL_NUMBER_HEXBYTE_3 & 15 )):1}
     LOCAL_STRING_UTF8_HEX+=${LOCAL_CODEPAGE_HEX:$(( $LOCAL_NUMBER_HEXBYTE_4 >> 4 )):1}
     LOCAL_STRING_UTF8_HEX+=${LOCAL_CODEPAGE_HEX:$(( $LOCAL_NUMBER_HEXBYTE_4 & 15 )):1}

     (( LOCAL_INDEX_HEX+=6 ))
     ;;
    *)
     LOCAL_CHARACTER_HEX_3=${LOCAL_STRING_HEX:$LOCAL_INDEX_HEX + 2:1}
     LOCAL_CHARACTER_HEX_4=${LOCAL_STRING_HEX:$LOCAL_INDEX_HEX + 3:1}

     LOCAL_NUMBER_HEX_2=$(( $(expr index $LOCAL_CODEPAGE_HEX \"$LOCAL_CHARACTER_HEX_2\") - 1 ))
     LOCAL_NUMBER_HEX_3=$(( $(expr index $LOCAL_CODEPAGE_HEX \"$LOCAL_CHARACTER_HEX_3\") - 1 ))
     LOCAL_NUMBER_HEX_4=$(( $(expr index $LOCAL_CODEPAGE_HEX \"$LOCAL_CHARACTER_HEX_4\") - 1 ))

     LOCAL_NUMBER_HEXBYTE_3=$(( $(( $LOCAL_NUMBER_HEX_1 & 1 )) << 2 | $(( $LOCAL_NUMBER_HEX_2 & 12 )) >> 2 ))
     LOCAL_NUMBER_HEXBYTE_4=$(( $(( $LOCAL_NUMBER_HEX_2 & 3 )) << 6 | $(( $LOCAL_NUMBER_HEX_3 & 3 )) << 4 | $LOCAL_NUMBER_HEX_4 ))

     LOCAL_STRING_UTF8_HEX+=${LOCAL_CODEPAGE_HEX:$(( $LOCAL_NUMBER_HEXBYTE_3 >> 4 )):1}
     LOCAL_STRING_UTF8_HEX+=${LOCAL_CODEPAGE_HEX:$(( $LOCAL_NUMBER_HEXBYTE_3 & 15 )):1}
     LOCAL_STRING_UTF8_HEX+=${LOCAL_CODEPAGE_HEX:$(( $LOCAL_NUMBER_HEXBYTE_4 >> 4 )):1}
     LOCAL_STRING_UTF8_HEX+=${LOCAL_CODEPAGE_HEX:$(( $LOCAL_NUMBER_HEXBYTE_4 & 15 )):1}

     (( LOCAL_INDEX_HEX+=2 ))
     ;;
    esac

    LOCAL_STRING_UTF8+=$(echo -e "\U$LOCAL_STRING_UTF8_HEX")
   ;;
 esac

 done <<< "$LOCAL_STRING_HEX"

 echo $LOCAL_STRING_UTF8
}

convert_hex_utf8 $(convert_base64_hex "$1")
